<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>BTCmonitor</artifactId>
        <groupId>ondro</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>ondro</groupId>
    <artifactId>BTCFrontend</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>BTCFrontend</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <skip.webpack.watch>true</skip.webpack.watch>
        <debug.address>5005</debug.address>
    </properties>
    
    <dependencies>
        
        <!-- Test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>        
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>          
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>fish.payara.arquillian</groupId>
            <artifactId>arquillian-payara-micro-5-managed</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>fish.payara.extras</groupId>
            <artifactId>payara-micro</artifactId>
        </dependency>
        
        <!-- Test deps for JAX-RS client -->      
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>2.26</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-moxy</artifactId>
            <version>2.26</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>2.26</version>
            <scope>test</scope>
        </dependency>

        <!-- Java EE API dependencies -->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- MicroProfile API -->
        <dependency>
            <groupId>org.eclipse.microprofile</groupId>
            <artifactId>microprofile</artifactId>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        
        <!-- RxJava library -->
        <dependency>
            <groupId>io.reactivex.rxjava2</groupId>
            <artifactId>rxjava</artifactId>
            <version>2.1.10</version>
        </dependency>
        
        <!-- RxJava invoker for JAX-RS rx client -->
        <dependency>
            <groupId>org.glassfish.jersey.ext.rx</groupId>
            <artifactId>jersey-rx-client-rxjava2</artifactId>
            <version>2.26</version>
        </dependency>    

        <!-- Kafka connector API -->
        
        <dependency>
            <groupId>fish.payara.cloud.connectors.kafka</groupId>
            <artifactId>kafka-jca-api</artifactId>
            <scope>compile</scope>
        </dependency> 
        <dependency>
            <groupId>fish.payara.cloud.connectors.kafka</groupId>
            <artifactId>kafka-rar</artifactId>
            <scope>runtime</scope>
            <type>rar</type>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

    </dependencies>

    <build>
        <finalName>BTCFrontend</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>slf4j</id>
                    </execution>
                    <execution>
                        <id>kafka-rar</id>
                    </execution>
                    <execution>
                        <id>payara-micro</id>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>fish.payara.maven.plugins</groupId>
                <artifactId>payara-micro-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>package-uber-jar</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <phase>install</phase>
                        <configuration>
                            <appendSystemProperties>
                                
                            </appendSystemProperties>
                            <commandLineOptions>
                                <option>
                                    <key>--addLibs</key>
                                    <value>${project.build.directory}/slf4j-api.jar:${project.build.directory}/slf4j-jdk14.jar</value>
                                </option>
                                <option>
                                    <key>--deploy</key>
                                    <value>${project.build.directory}/kafka-rar.rar</value>
                                </option>
                                <option>
                                    <key>--deploy</key>
                                    <value>${project.build.directory}/${project.build.finalName}.war</value>
                                </option>
                                <option>
                                    <key>--outputuberjar</key>
                                    <value>${project.build.directory}/${project.build.finalName}-bundle.jar</value>
                                </option>
                            </commandLineOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-cli</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <commandLineOptions>
                                <option>
                                    <key>--addLibs</key>
                                    <value>${project.build.directory}/slf4j-api.jar:${project.build.directory}/slf4j-jdk14.jar</value>
                                </option>
                                <option>
                                    <key>--deploy</key>
                                    <value>${project.build.directory}/kafka-rar.rar</value>
                                </option>
                                <option>
                                    <key>--deploy</key>
                                    <value>${project.build.directory}/${project.build.finalName}</value>
                                </option>
                            </commandLineOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <skip>${skip.install.npm}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm install modules</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>

                        <phase>generate-resources</phase>

                        <configuration>
                            <arguments>install</arguments>
                            <skip>${skip.install.npm.modules}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>webpack build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>

                        <phase>generate-resources</phase>

                        <configuration>
                            <arguments>run webpack</arguments>
                            <skip>${skip.webpack.build}</skip>
                        </configuration>
                    </execution>                
                    <execution>
                        <id>webpack watch</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>

                        <phase>generate-resources</phase>

                        <configuration>
                            <arguments>run webpack-watch</arguments>
                            <skip>${skip.webpack.watch}</skip>
                        </configuration>
                    </execution>                
                </executions>
                <configuration>
                    <nodeVersion>v8.9.4</nodeVersion>
                    <installDirectory>${datadir}</installDirectory>
                    <workingDirectory>${basedir}${file.separator}src${file.separator}main${file.separator}javascript</workingDirectory>
                </configuration>            
            </plugin>        
        </plugins>
    </build>
    
    <profiles>
        <profile>
            <id>fastwebbuild</id>
            <properties>
                <skip.install.npm>true</skip.install.npm>
                <skip.install.npm.modules>true</skip.install.npm.modules>
                <skip.webpack.build>true</skip.webpack.build>
                <skip.webpack.watch>false</skip.webpack.watch>
            </properties>
        </profile>
        <profile>
            <id>fastnowebbuild</id>
            <properties>
                <skip.install.npm>true</skip.install.npm>
                <skip.install.npm.modules>true</skip.install.npm.modules>
                <skip.webpack.build>true</skip.webpack.build>
                <skip.webpack.watch>true</skip.webpack.watch>
            </properties>
        </profile>
        <profile>
            <id>rundebug</id>
            <properties>
                <skip.install.npm>true</skip.install.npm>
                <skip.install.npm.modules>true</skip.install.npm.modules>
                <skip.webpack.build>true</skip.webpack.build>
                <skip.webpack.watch>true</skip.webpack.watch>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>fish.payara.maven.plugins</groupId>
                        <artifactId>payara-micro-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-debug</id>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <javaCommandLineOptions>
                                        <option>
                                            <value>-Xdebug</value>
                                        </option>
                                        <option>
                                            <key>-Xrunjdwp:transport</key>
                                            <value>dt_socket,server=y,suspend=y,address=${debug.address}</value>
                                        </option>
                                    </javaCommandLineOptions>
                                    <commandLineOptions>
                                        <option>
                                            <key>--addLibs</key>
                                            <value>${project.build.directory}/slf4j-api.jar:${project.build.directory}/slf4j-jdk14.jar</value>
                                        </option>
                                        <option>
                                            <key>--deploy</key>
                                            <value>${project.build.directory}/kafka-rar.rar</value>
                                        </option>
                                        <option>
                                            <key>--deploy</key>
                                            <value>${project.build.directory}/${project.build.finalName}.war</value>
                                        </option>
                                    </commandLineOptions>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
</project>
